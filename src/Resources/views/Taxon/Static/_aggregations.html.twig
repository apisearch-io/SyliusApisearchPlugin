{% macro printAggregation(
    result,
    aggregationName,
    maxElements
    ) %}
    {% import _self as _aggregations %}
    {% set aggregation = result.aggregation(aggregationName) %}

    {% if aggregation != null and not aggregation|call('isEmpty') %}
        <div class="item">
            <div class="field">
                <label>{{ _aggregations.printTitle(aggregationName) }}</label>
                <div class="ui relaxed divided list">
                    {% for counter in aggregation|call('getCounters')|slice(0, maxElements|default(999)) %}
                        {{ _aggregations.printAggregationOption(
                            result,
                            aggregationName,
                            counter|call('getId')
                        ) }}
                    {% endfor %}
                </div>

                {% if aggregation|call('getActiveElements') is not empty %}
                    <a href="{{ result|remove_filter_value(aggregationName) }}" class="ui red button">
                        <span class="glyphicon glyphicon-remove-circle fa fa-remove"></span> {{ "apisearch.ui.remove_selected"|trans }}
                    </a>
                {% endif %}

                {% if aggregation|call('hasLevels') %}
                    {% for activeElement in aggregation|call('getActiveElements') %}
                        <a href="{{ result|remove_filter_value(aggregationName, activeElement|call('getId')) }}" class="ui red button">
                            <span class="glyphicon glyphicon-remove-circle fa fa-remove"></span> {{ activeElement|call('getName')|trans }}
                        </a>
                    {% endfor %}
                {% endif %}
            </div>
        </div>
    {% endif %}
{% endmacro printAggregation %}


{% macro printAggregationOption(
    result,
    aggregationName,
    counterId
    ) %}
    {% import _self as _aggregations %}
    {% set aggregation = result.aggregation(aggregationName) %}
    {% set counter = aggregation|call('getCounters')[counterId] %}
    {% if counter is not null %}
        {% set edited_search_query = counter|call('isUsed')
            ? result|remove_filter_value(aggregationName, counterId)
            : result|add_filter_value(aggregationName, counterId) %}
        <div class="item">
            <div class="ui toggle checkbox">
                <a href="{{ edited_search_query }}">
                    {% if not aggregation|call('hasLevels') %}
                        <input type="checkbox"{% if counter|call('isUsed') %} checked{% endif %}
                               onclick='window.location.assign("{{ edited_search_query }}")'>
                    {% endif %}
                    {{ _aggregations.printOptionValue(aggregationName, counter) }}
                </a>
            </div>
        </div>
    {% endif %}
{% endmacro printAggregationOption %}


{% macro printPriceRange(result) %}
    {% import _self as _aggregations %}
    {% set aggregation = result.aggregation('price') %}

    {% if aggregation != null and not aggregation.isEmpty() %}
        {% set result_min_price = result.minPrice %}
        {% set result_max_price = result.maxPrice %}

        <div id="price_range_wrapper"
             data-url-placeholder="{{ result|remove_price_range_filter }}"
             data-slider-max="{{ result_max_price }}"
        >
            {{ _aggregations.printTitle('price') }}
            {% if app.request.query.has('price') %}
                <div>
                    <a href="{{ result|remove_price_range_filter }}">
                        <span class="glyphicon glyphicon-remove-circle fa fa-remove"></span> {{ "labels.remove_selected"|trans }}
                    </a>
                </div>
            {% endif %}
            <input
                    id="price_range"
                    type="text"
                    class="span2"
                    value=""
                    data-slider-min="{{ result_min_price }}"
                    data-slider-max="{{ result_max_price }}"
                    data-slider-step="1"
                    data-slider-value="[{{ result_min_price }},{{ result_max_price }}]"
            />
        </div>
    {% endif %}

{% endmacro printPriceRange %}


{% macro printMultiplePriceRange(result) %}

    {% import _self as _aggregations %}
    {% set aggregation = result.aggregation('price') %}

    {% if aggregation != null and not aggregation.isEmpty() %}
        {{ _aggregations.printTitle('price') }}
        <ul>
            {% if aggregation.getActiveElements() is not empty %}
                <li>
                    <a href="{{ result|remove_filter_value('price') }}">
                        <span class="glyphicon glyphicon-remove-circle fa fa-remove"></span> {{ "labels.remove_selected"|trans }}
                    </a>
                </li>
            {% endif %}

            {% for name,counter in aggregation %}
                <li>
                    {% set edited_search_query = counter.isUsed()
                        ? result|remove_filter_value('price', counter.getId())
                        : result|add_filter_value('price', counter.getId()) %}

                    <a href="{{ edited_search_query }}">
                        <input type="checkbox"{% if counter.isUsed() %} checked{% endif %}/>
                        {{ _aggregations.printOptionValue('price', counter) }}
                    </a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}

{% endmacro printMultiplePriceRange %}


{% macro printRatingRange(result) %}
    {% import _self as _aggregations %}
    {% set aggregation = result.aggregation('rating') %}

    {% if aggregation != null and not aggregation.isEmpty() %}
        {{ _aggregations.printTitle('rating') }}
        <ul>
            {% if aggregation.getActiveElements() is not empty %}
                <li>
                    <a href="{{ result|remove_filter_value('rating') }}">
                        <span class="glyphicon glyphicon-remove-circle fa fa-times"></span> {{ "apisearch.ui.remove_selected"|trans }}
                    </a>
                </li>
            {% endif %}

            {% for name,counter in aggregation %}
                {% set elems = counter.getName()|split('..') %}
                <li>
                    {% set edited_search_query = counter.isUsed()
                        ? result|remove_filter_value('rating', counter.getId())
                        : result|add_filter_value('rating', counter.getId()) %}

                    <a href="{{ edited_search_query }}">
                        <input type="checkbox"{% if counter.isUsed() %} checked{% endif %}/>
                        <span style="font-size: 12px; color: #337ab7;">
                            {% set numStars = (elems.0|number_format) %}
                            {% set numEmptyStarts = 10-numStars %}
                            {% if numStars > 0 %}
                                {% for i in 1..numStars %}
                                    <span class="glyphicon glyphicon-star fa fa-star" aria-hidden="true"></span>
                                {% endfor %}
                            {% endif %}
                            {% if numEmptyStarts > 0 %}
                                {% for i in 1..numEmptyStarts %}
                                    <span class="glyphicon glyphicon-star-empty fa fa-star-o" aria-hidden="true"></span>
                                {% endfor %}
                            {% endif %}
                        </span>
                        ({{ counter.n }})
                    </a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro printRatingRange %}


{% macro printTitle(aggregationName) %}
    {{ 'apisearch.ui.fields.'~aggregationName | trans }}
{% endmacro printTitle %}


{% macro printOptionValue(aggregationName, counter) %}
    <label>{{ aggregationName|trans_option(counter|call('getName')) }} ({{ counter|call('getN') }})</label>
{% endmacro printOptionValue %}
